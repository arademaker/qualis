ls()
str(areas)
table(areas$ISSN,areas$area)
tmp <- as.data.frame(table(areas$ISSN,areas$area))
head(tmp)
tmp[tmp$Freq > 1,]
tmp <- as.data.frame(table(areas$ISSN))
tmp[tmp$Freq > 1,]
tmp[tmp$Freq > 2,]
ls()
rm(tmp)
ls()
str(areas)
areas
str(areas)
q()
y
ls()
str(areas)
areas[is.na(areas$ISSN),]
str(areas)
areas$ISSN == "1085-3375"
areas[areas$ISSN == "1085-3375",]
unique(areas$ISSN)
unique(areas$area)
table(areas$area)
as.data.frame(table(areas$area))
write.csv(areas, file="teste.csv")
q()
y
source("clean.R")
warnings()
source("clean.R")
str(data)
ls()
str(areas)
area <- read.table("area-45.tmp", sep="|", quote="", stringsAsFactors = FALSE, header=TRUE, comment.char = "")
str(area)
source("clean.R")
area <- read.table("area-45.csv", sep="|", quote="", stringsAsFactors = FALSE, header=TRUE, comment.char = "")
str(area)
area$area <- area[1,2]
unique(area$area)
area[area$ISSN == "","ISSN"] <- NA
lines <- grep("\\(", area$titulo)
?grep
lines <- grep("\(", area$titulo)
lines <- grep("\\(", area$titulo)
warnings()[1:10]
area[3,]
?read.table
area <- read.table("area-45.csv", sep="|", quote="", stringsAsFactors = FALSE, header=TRUE, comment.char = "")
area[3,]
source("clean.R")
str(areas)
unique(area)
unique(area$area)
unique(areas$area)
str(areas)
areas[duplicated(areas$ISSN),1:3]
areas[duplicated(areas$ISSN),1]
str(areas)
areas[duplicated(areas$ISSN),c(1,2,4)]
duplicado <- areas[duplicated(areas$ISSN),c(1,2,4)]
table(duplicado)
str(duplicado)
dup <- as.data.frame(table(duplicado$ISSN,duplicado$area,duplicado$estrado))
ls()
rm(duplicado)
ls()
str(areas)
head(areas[areas$ISSN %in% duplicated(areas$ISSN),], 10)
areas[areas$ISSN %in% duplicated(areas$ISSN),]
head(areas[duplicated(areas$ISSN),"ISSN"], 10)
areas[areas$ISSN %in% head(areas[duplicated(areas$ISSN),"ISSN"], 10),]
str(areas)
areas[grep("/",areas$titulo),]
source("clean.R")
areas[grep("/",areas$titulo),]
source("clean.R")
areas[grep("/",areas$titulo),]
unique(areas$estrato)
source("clean.R")
unique(areas$estrato)
str(areas)
tmp <- areas[,c(1,2,4)]
tmp[1:10,]
?table
library(ply)
library(ggplot2)
?table
str(tmp)
l <- table(tmp$ISSN, tmp$area, tmp$estrato)
l
ld <- as.data.frame(l)
ld[1:10,]
ld[ld$Freq > 1,]
str(l)
l[,1,]
l[1:10,1,]
l[1:10,1,]
apply(l[,1,],1, function(x) length(x[x > 0]))
apply(l[,1,],1, function(x) length(x[x > 0]))
tt <- as.data.frame(apply(l[,1,],1, function(x) length(x[x > 0])))
tt[1:10,]
tt
tt <- apply(l[,1,],1, function(x) length(x[x > 0]))
str(tt)
tt[1:10,]
tt
tt > 0 
tt[tt > 0 ]
tt[tt > 1]
areas[grep("0104-4036", areas$ISSN),]
source("clean.R")
areas[grep("0104-4036", areas$ISSN),]
tt <- apply(l[,1,],1, function(x) length(x[x > 0]))
tt[tt>1]
tt <- apply(l[,2,],1, function(x) length(x[x > 0]))
tt[tt>1]
tt <- apply(l[,3,],1, function(x) length(x[x > 0]))
tt[tt>1]
areas[grep("0872-6043", areas$ISSN),]
areas[grep("1517-9702", areas$ISSN),]
areas[grep("1679-1363", areas$ISSN),]
areas[grep("1808-2807", areas$ISSN),]
tt <- apply(l[,2,],1, function(x) length(x[x > 0]))
tt[tt>1]
source("clean.R")
l <- table(tmp$ISSN, tmp$area, tmp$estrato)
str(l)
tt <- apply(l[,1,],1, function(x) length(x[x > 0])); tt[tt>1]
areas[grep("0104-4036", areas$ISSN),]
tt <- apply(l[,2,],1, function(x) length(x[x > 0])); tt[tt>1]
tt <- apply(l[,3,],1, function(x) length(x[x > 0])); tt[tt>1]
areas[areas$ISSN %in% c(0872-6043 1517-9702 1679-1363 1808-2807)
areas[areas$ISSN %in% c("0872-6043","1517-9702","1679-1363","1808-2807"),]
tt <- apply(l[,4,],1, function(x) length(x[x > 0])); tt[tt>1]
tt <- apply(l[,5,],1, function(x) length(x[x > 0])); tt[tt>1]
tt <- apply(l[,6,],1, function(x) length(x[x > 0])); tt[tt>1]
tt <- apply(l[,5,],1, function(x) length(x[x > 0])); tt[tt>1]
tt <- apply(l[,3,],1, function(x) length(x[x > 0])); tt[tt>1]
s
str(tt)
t2 <- tt[tt>1]
str(t2)
names(t2)
tt <- apply(l[,3,],1, function(x) length(x[x > 0])); tt[tt>1]
tt <- apply(l[,5,],1, function(x) length(x[x > 0])); tt[tt>1]
tt.1 <- tt[tt>1]
names(tt.1)
areas[areas$ISSN %in% names(tt.1),]
source("clean.R")
?by
?tapply
cc <- count(areas)
str(cc)
ls()
rm(l,ld,tt.1,tmp)
ls()
str(areas)
areas.1 <- areas[,c(1,2,4)]
str(areas.1)
areas.2 <- count(areas.1)
str(areas.2)
areas.2[areas.2$freq > 1,]
areas.2[areas.2$freq >= 1,]
ls()
str(areas.1)
str(areas.2)
str(areas)
?duplicated
?unique
?areas.1
str(areas.1)
areas.2 <- unique(areas.1)
areas.2[1:10,]
duplicated(areas.2$ISSN)
areas.2[duplicated(areas.2$ISSN),]
str(areas.1)
?split
areas.1$farea <- factor(areas.1$area)
str(areas.1)
areas.1$area <- NULL
str(areas.1)
names(areas.1)
names(areas.1) <- c("ISSN","estrato","area")
str(areas.1)
dd <- split(areas.1,areas.1$area)
str(dd)
unique(dd[[1]])
str(dd)
tmp <- dd[[1]]
str(tmp)
tmp <- dd[[1]][,1:2]
str(tmp)
unique(dd[[1]][,1:2])
count(dd[[1]][,1:2])
ddd <- count(dd[[1]][,1:2])
ddd$freq > 1
ddd[ddd$freq > 1,]
str(dd)
ls()
rm(areas.1,areas.2,cc,ddd,tt,t2,tmp)
ls()
rm(dd,lines,n)
ls()
source("clean.R")
ls()
str(areas)
ls()
str(areas)
q()
y
ddply(areas, .(area), summarise)
library(plyr)
ddply(areas, .(area), summarise)
ddply(areas, .(area), "str")
ddply(areas, .(area), c("nrow", "ncol"))
ddply(areas, .(area), function(dt) count(dt, c("ISSN","estrato")))
tmp <- ddply(areas, .(area), function(dt) count(dt, c("ISSN","estrato")))
str(tmp)
tmp[tmp$freq > 1,]
tmp <- ddply(areas, .(area), function(dt) count(dt, "ISSN"))
str(tmp)
tmp[tmp$fre > 1,]
tmp <- ddply(areas, .(area))
tmp[[1]]
split
?split
str(areas)
tmp <- split(areas, factor(areas$area))
str(tmp)
tmp.1 <- tmp[[1]]
str(tmp.1)
table(tmp.1$estrato,tmp.1$ISSN)
table(tmp.1$ISSN,tmp.1$estrato)
tmp.2 <- table(tmp.1$ISSN,tmp.1$estrato)
str(tmp.2)
?table
?ftable
tmp.2 <- ftable(tmp.1$ISSN,tmp.1$estrato)
str(tmp.2)
tmp.2
str(tmp.2)
tmp.2 <- table(tmp.1$ISSN,tmp.1$estrato)
str(tmp.2)
tmp.2[1:10,]
apply(tmp.2, 1, function(v) length(v[v > 0]))
q()
y
ls()
num <- sample(0:9, 4)
num
?sort
num <- sample(0:9, 4)
num.old <- rep(0, 4)

while(num != num.old){
  num.old <- num
  num.dsort <- sort(num)
  num.isort <- sort(num, decreasing=TRUE)
  num <- num.dsort - num.isort
}

warnings()
num <- sample(0:9, 4)
num.old <- rep(0, 4)

while(any(num != num.old)){
  num.old <- num
  num.dsort <- sort(num)
  num.isort <- sort(num, decreasing=TRUE)
  num <- num.dsort - num.isort
}

num
num.old
num <- sample(0:9, 4)
num.old <- sample(0:9, 4)
num - num.old
any(num != num.old)
num != num.old
any(num != num.old)
sort(num)
sort(num, decreasing=TRUE)
paste(num, sep="")
paste(num, collapse="")
as.numeric(paste(num, collapse=""))
123
strsplit(123)
strsplit(as.character(123))
splitstr(as.character(123))
strsplit(as.character(123))
strsplit(as.character(123), split="")
unlist(strsplit(as.character(123), split=""))
as.numeric(unlist(strsplit(as.character(123), split="")))
source("teste.R")
num
sample(0:9, 4)
sample(0:9, 4)
sample(0:9, 4)
sample(0:9, 4)
toNum(sample(0:9, 4))
source("teste.R")
num
source("teste.R")
num
source("teste.R")
num
source("teste.R"); num
source("teste.R"); num
i
source("teste.R"); num
i
source("teste.R"); num
i
source("teste.R"); num
i
source("teste.R"); num
source("teste.R"); num
source("teste.R"); num
i
ls()
rm(toNum,toVec,i,num)
ls()
rm(vnum)
ls()
str(tmp.2)
tmp.2 <- table(tmp.1$ISSN,tmp.1$estrato)
tmp.2
appply(tmp.2, 1, function(l) length(l[l > 0]))
apply(tmp.2, 1, function(l) length(l[l > 0]))
as.data.frame(apply(tmp.2, 1, function(l) length(l[l > 0])))
tmp <- ddply(areas, .(area), function(dt)
             as.data.frame(apply(dt, 1, function(l) length(l[l > 0])))
)
library(plyr)
tmp <- ddply(areas, .(area), function(dt)
             as.data.frame(apply(dt, 1, function(l) length(l[l > 0]))))
str(tmp)
tmp
str(tmp.1)
tmp <- ddply(areas, .(area), function(dt)
             as.data.frame(apply(table(dt$ISSN,dt$estrato), 1, function(l) length(l[l > 0]))))

str(tmp)
tmp <- ddply(areas, .(area), cc = function(dt)
             as.data.frame(apply(table(dt$ISSN,dt$estrato), 1, function(l) length(l[l > 0]))))
str(tmp)
str(tmp)
str(tmp.2)
str(tmp.1)
tmp.2 <- table(tmp.1$ISSN,tmp.1$estrato)
str(tmp.2)
dimnames(tmp.2)[[1]]
tmp.1 <- ddply(areas, .(area))
str(tmp.1)
tmp <- ddply(areas, .(area), str)
ddply(areas, .(area), str)
tmp <- split(areas, factor(areas$area)
)
str(tmp)
?lapply
tmp.2
str(tmp.2)
tmp.2[[1]]
str(tmp.2[[1]])
num
i
num
i
tmp <- split(areas, factor(areas$area))
str(tmp)
tmp.1 <- tmp[[1]]
str(tmp.1)
dt <- tmp.1
t <- table(dt$ISSN,dt$estrato)
str(t)
t[1:10,]
apply(t[1:10,], 1, function(l) length(l[l > 0]))
as.data.frame(apply(t[1:10,], 1, function(l) length(l[l > 0])))
apply(t[1:10,], 1, function(l) length(l[l > 0]))
str(apply(t[1:10,], 1, function(l) length(l[l > 0])))
apply(t[1:10,], 1, function(l) length(l[l > 0]))
tt <- apply(t[1:10,], 1, function(l) length(l[l > 0]))
names(tt)
cbind(names(tt), tt)
as.data.frame(apply(t[1:10,], 1, function(l) length(l[l > 0])))
data.frame( issn = names(tt), count = tt)
tmp2.
tmp.2
str(tmp.2)
tmp.2[[1]]
tmp.2
str(tmp.2)
tmp.2[[5]]
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R")
tmp.2
source("clean.R"); tmp.2
source("clean.R"); tmp.2
source("clean.R"); tmp.2
source("clean.R"); tmp.2
source("clean.R"); tmp.2
source("clean.R"); tmp.2
source("clean.R"); tmp.2
q()
y
library(plyr)
?mdply
mdply(areas[1,], str)
str(areas)
mdply(areas[1:3,], str)
?mdply
mdply(areas[1:3,], summary)
mdply(areas[1:3,], str)
mdply(areas[1:3,], cat)
mdply(areas[1:3,], str)
mdply(areas[1:3,], class)
mdply(areas[1:3,], function(x) class(x))
?mapply
?mdply
mdply(areas[1:3,], toN3)
mdply(areas[1:3,], toN3)
str(areas)
source("clean.R")
mdply(areas[1:3,], toN3)
t <- mdply(areas[1:3,], toN3)
str(t)
?mdply
t <- mdply(areas[1:3,], toN3, expand = FALSE)
str(t)
mdply(data.frame(mean = 1:5, sd = 1:5), rnorm, n = 2)
mdply(data.frame(mean = 1:5, sd = 1:5), rnorm, n = 2, expand = FALSE)
mdply(data.frame(mean = 1:5, sd = 1:5), rnorm, n = 2, .expand = FALSE)
t <- mdply(areas[1:3,], toN3, .expand = FALSE)
str(t)
t
t <- mdply(areas, toN3, .expand = FALSE)
str(t)
t[1:10,]
options(width=120)
t[1:10,]
source("clean.R")
warnings()
ls()
rm(fac,tmp.1,tmp.2,toN3, tt,tmp,t)
ls()
rm(titulo.t,store,titulos,titulos.o,num.old,names)
ls()
rm(i,num.dsort,num.isort,lines,conferencias,n,periodicos.computacao,dt,num,titulos.t)
ls()
str(areas)
?write.table
write.table(areas[,c(7,3,2,4,5)], file = "areas.text", row.names = FALSE, sep="|", quote = FALSE)
q()
y
str(areas)
grep("\"", areas$titulo)
areas[grep("\"", areas$titulo),]
lines <- grep("\"", areas$titulo)
areas[lines,]
areas[lines,"titulo"]
gsub("\"","\'",areas[lines,"titulo"])
gsub("\"","\\"",areas[lines,"titulo"])
gsub("\"","\\\"",areas[lines,"titulo"])
areas[lines,"titulo"]
URLencode(areas[lines,"titulo"])
gsub("\"",URLencode("\""),areas[lines,"titulo"])
source("clean.R")
lines
areas[lines,]
source("clean.R")
source("clean.R")
q()
y
